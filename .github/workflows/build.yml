name: Scopes Nightly
on:
  push:
    # DEBUG: for debugging run on branches too
    branches:
      - main
      - build-releases
    # tags-ignore:
    #   - 'v**-pre'
  workflow_dispatch:
#   schedule:
#     - cron: "0 0 * * 0"
jobs:

  linux-build:
    runs-on: ubuntu-22.04
    steps:

      - name: Install build dependencies
        run: sudo apt install mkdocs python3-pip libtinfo5

      - name: Fetch Scopes Source Code and Build Recipes
        run: |

          curl -S --no-progress-meter -o scopes.tar.gz https://hg.sr.ht/~duangle/scopes/archive/default.tar.gz
          # extracts to "scopes-default" folder
          tar xvz -f scopes.tar.gz

        
      - name: Install MajorEO Package
        run: |

          cd scopes-default

          # install eo package manager
          mkdir -p ./bin
          curl -S --no-progress-meter \
              https://hg.sr.ht/~duangle/majoreo/raw/eo > ./bin/eo

          chmod ug+x ./bin/eo

      - name: Patch recipes
        run: |
          cd scopes-default
          # patch genie recipe from the source code
          curl -S --no-progress-meter \
              "https://raw.githubusercontent.com/ScopesCommunity/scopes-unstable/main/workarounds/genie.eo" \
              -o ./external/recipes/genie.eo


      - name: Cache downloaded dependencies
        id: cache-eo
        uses: actions/cache@v3
        env:
          cache-name: cache-eo-downloads
        with:
          path: ./.eo/dlcache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('external/recipes/*.eo') }}
              
      - name: Install & Build Dependencies
        run: |

          ./bin/eo install --silent-progress -y genie clang clang-runtime spirv-tools spirv-cross pcre lmdb libffi
          ./bin/eo sync --silent-progress

      # TODO: we could cache the build of scopes as well if there were
      # no changes
      - name: Build Scopes
        run: |

          ./bin/genie gmake
          make -j$(nproc) -C build config=release

      - name: Package artifact
        run: |
          
          tar -czf \
              scopes-linux.tar.gz \
              bin/ doc/ include/ lib/ testing/ CREDITS.md LICENSE.md

      - name: Distribution Artifact
        uses: actions/upload-artifact@v4
        with:
          name: scopes-linux
          path: scopes-linux.tar.gz

  release:
    needs: linux-build
    runs-on: ubuntu-22.04

    steps:


    - id: revision
      name: Resolve the current scopes revision
      run: |

        rev=$(hg identify https://hg.sr.ht/~duangle/scopes/)
        echo "scopes-revision=${rev}" >> $GITHUB_OUTPUT

    - name: Resolve build version
      id: get-build-version
      env:
        GH_RUN_NUMBER: ${{ github.run_number }}

      run: |
        curl -S --no-progress-meter https://hg.sr.ht/~duangle/scopes/raw/include/scopes/config.h > config.h

        major=$(cat config.h | grep SCOPES_VERSION_MAJOR | awk '{print $3}')
        minor=$(cat config.h | grep SCOPES_VERSION_MINOR | awk '{print $3}')
        patch=$(cat config.h | grep SCOPES_VERSION_PATCH | awk '{print $3}')

        next_version="${major}.${minor}.${patch}"

        build_version="${next_version}-pre${GH_RUN_NUMBER}"

        echo "Build version: ${build_version}"

        echo "scopes-next-major-version=${major}" >> $GITHUB_OUTPUT
        echo "scopes-next-minor-version=${minor}" >> $GITHUB_OUTPUT
        echo "scopes-next-patch-version=${patch}" >> $GITHUB_OUTPUT
        echo "scopes-next-version=${next_version}" >> $GITHUB_OUTPUT
        echo "scopes-build-version=${build_version}" >> $GITHUB_OUTPUT

    - name: Standalone Documentation
      uses: actions/upload-artifact@v4
      with:
        name: scopes-unstable-docs
        path: doc/

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: scopes-linux
        path: scopes-linux.tar.gz
    # DEBUG
    # - name: Download Build Artifacts
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: scopes-windows
    #     path: scopes-${{ steps.revision.outputs.scopes-revision }}-windows.zip

    - name: Tag
      uses: fatjyc/github-tagger@v0.0.1
      with:
        tag: ${{ steps.get-build-version.outputs.scopes-build-version }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        prerelease: true
        name: |
          Scopes Prerelease nightly build ${{ steps.revision.outputs.scopes-build-version }}
        tag_name: ${{ steps.get-build-version.outputs.scopes-build-version }}
        body: |
          Pre-release "nightly" build of Scopes version: ${{ steps.get-build-version.outputs.scopes-next-version }}

          Built from upstream commit revision: ${{ steps.revision.outputs.scopes-revision }}

          Build number: ${{ steps.get-build-version.outputs.scopes-build-version }}

        files: |
          scopes${{ steps.get-build-version.outputs.scopes-build-version }}-linux.tar.gz

